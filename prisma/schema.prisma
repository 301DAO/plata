// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// NOTE: dont use prisma migrate, planetscale recommends using prisma db push
// read more: https://docs.planetscale.com/tutorials/automatic-prisma-migrations
// https://www.prisma.io/docs/guides/database/using-prisma-with-planetscale

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]

}

datasource db {
  provider             = "mysql"
  url                  = env("PLANETSCALE_PRISMA_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            String       @id @default(cuid())
  issuer        String?      @unique
  email         String?      @unique
  nonce         String?      @unique
  publicAddress String?      @unique
  plaidItems    PlaidItems[]
  lastLogin     DateTime
  createdAt     DateTime     @default(now())
}

model PlaidItems {
  id                 String   @id @default(cuid())
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId             String   @unique
  plaidAccessToken   String   @unique
  plaidItemId        String   @unique
  plaidInstitutionId String
  status             String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  //planetscale doesnt support foreign keys, so we use prisma to emulate referential integrity
  //because of this there is no index on the userId field so we manually create one
  @@index([userId])
}

model PlaidApiEvents {
  id          String   @id @default(cuid())
  itemId      String?
  userId      String?
  plaidMethod String
  arguments   String?
  requestId   String?  @unique
  errorType   String?
  errorCode   String?
  createdAt   DateTime @default(now())
}

model LinkEvents {
  id            String   @id @default(cuid())
  type          String
  userId        String?
  linkSessionId String
  requestId     String?  @unique
  errorType     String?
  errorCode     String?
  status        String?
  createdAt     DateTime @default(now())
}
